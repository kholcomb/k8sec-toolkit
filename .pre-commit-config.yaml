# Optimized Pre-commit Configuration for k8sec-toolkit
# Focused on essential security and quality checks without external tool dependencies
# See https://pre-commit.com for more information

repos:
  # Essential Go hooks (no external tool dependencies)
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
        name: Format Go code
        description: Runs gofmt to format Go code (built-in, fast, reliable)
      - id: go-mod-tidy
        name: Clean go.mod and go.sum
        description: Runs go mod tidy to clean up module files

  # Security hooks (CRITICAL - must run for security project)
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        description: Prevents committing secrets and credentials
        args: ['--baseline', '.secrets.baseline']
        exclude: go.sum

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.27.2
    hooks:
      - id: gitleaks
        name: GitLeaks secret detection
        description: Additional secret detection with GitLeaks

  # Essential file quality hooks (lightweight, high value)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: Removes trailing whitespace from files
      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensures files end with a newline
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Detects merge conflict markers
      - id: check-added-large-files
        name: Check for large files
        description: Prevents large files (>500KB) from being committed
        args: ['--maxkb=500']
      - id: mixed-line-ending
        name: Fix mixed line endings
        description: Normalizes line endings to LF
        args: ['--fix=lf']
      - id: check-yaml
        name: Validate YAML syntax
        description: Checks YAML files for syntax errors
        files: \.(yaml|yml)$
      - id: check-json
        name: Validate JSON syntax
        description: Checks JSON files for syntax errors
        files: \.json$
      - id: check-case-conflict
        name: Check for case conflicts
        description: Ensures case-insensitive filesystems work
      - id: check-executables-have-shebangs
        name: Check executable shebangs
        description: Ensures executable files have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang executability
        description: Ensures files with shebangs are executable

  # Project-specific validations (custom, high value for project consistency)
  - repo: local
    hooks:
      - id: check-k8sec-toolkit-references
        name: Validate k8sec-toolkit references
        description: Ensures no old "kubesec" references remain
        entry: bash -c 'if grep -r "kubesec" --exclude-dir=.git --exclude="*.md" --exclude=".pre-commit-config.yaml" .; then echo "Found kubesec references that should be k8sec-toolkit"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-go-module-path
        name: Validate Go module path
        description: Ensures go.mod uses correct module path
        entry: bash -c 'if ! grep -q "module github.com/kholcomb/k8sec-toolkit" go.mod; then echo "go.mod must use correct module path"; exit 1; fi'
        language: system
        files: go.mod

# Global configuration
default_stages: [pre-commit]
fail_fast: false

# MOVED TO CI PIPELINE:
# - go-imports (requires goimports installation)
# - go-vet (environment/PATH issues)
# - go-unit-tests (comprehensive testing in CI)
# - golangci-lint (requires golangci-lint installation)
# - markdownlint (documentation style - not critical for commits)
# - shellcheck (script style - not critical for commits)
# - Docker/TOML/XML checks (not currently relevant)

# BENEFITS:
# - No external tool installation requirements
# - Fast, reliable commits
# - Security checks remain active
# - Essential quality maintained
# - Development velocity improved
